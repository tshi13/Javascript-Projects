To launch an XSS attack on the original starter webpage, we would enter the 
chatroom interface and type in javascript code disguised as a message.

E.g. <img src="non-existent" onerror = alert("XSS");></img>
Once you send it, an alert window will pop up saying "XSS".

This is because with innerHTML, the string that we enter has the possibility of
being interpreted as code, thus executing the alert window command that we specified.

To solve this, we should change innerHTML to something more secure, such as innerText 
or textContent because they do not pass content as HMTL. 

Also, we are showing the uname and password in the URL, which is also bad practice and 
could lead to security issues. To solve this issue, instead of doing app.get(), we should
switch to app.post(). This will now hide the uname and password.